{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addClick","good","setState","removeClick","index","indexOf","firstPart","slice","secondPart","result","concat","this","text","length","join","className","type","onClick","classNames","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,SAAW,SAACC,GACV,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,YAAc,SAACF,GACb,IAAQF,EAAkB,EAAKD,MAAvBC,cACFK,EAAQL,EAAcM,QAAQJ,GAC9BK,EAAYP,EAAcQ,MAAM,EAAGH,GACnCI,EAAaT,EAAcQ,MAAMH,EAAQ,GACzCK,EAASH,EAAUI,OAAOF,GAEhC,EAAKN,SAAS,CAAEH,cAAc,YAAKU,M,4CAGrC,WAAU,IAAD,OACCV,EAAkBY,KAAKb,MAAvBC,cACJa,EAAO,GAUX,OAR6B,IAAzBb,EAAcc,OAChBD,EAAO,oBAC2B,IAAzBb,EAAcc,OACvBD,EAAI,UAAMb,EAAN,gBACKA,EAAcc,OAAS,IAChCD,EAAI,UAAMb,EAAce,KAAK,MAAzB,kBAIJ,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,0BAAd,SACGH,IAEH,wBACEI,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEH,cAAe,MAEjCgB,UAAWG,IAAW,wBAAyB,CAAE,oCAA8D,IAAzBnB,EAAcc,SALtG,kBAUF,oBAAIE,UAAU,YAAd,SACGnB,EAAgBuB,KAAI,SAAAlB,GAAI,OACvB,qBAEEc,UAAWG,IAAW,YAAa,CAAE,sBAAuBnB,EAAcqB,SAASnB,KAFrF,UAIGA,EACD,iCACE,wBACEe,KAAK,SACLD,UAAWG,IAAW,MAAO,CAAE,gBAAiBnB,EAAcqB,SAASnB,KACvEgB,QAAS,WACP,EAAKjB,SAASC,IAJlB,iBASA,wBACEe,KAAK,SACLD,UAAU,MACVE,QAAS,WACP,EAAKd,YAAYF,IAJrB,yBAdGA,e,GApDDoB,IAAMC,WAoFTzB,ICtGf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9e37a13.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addClick = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeClick = (good: string) => {\n    const { selectedGoods } = this.state;\n    const index = selectedGoods.indexOf(good);\n    const firstPart = selectedGoods.slice(0, index);\n    const secondPart = selectedGoods.slice(index + 1);\n    const result = firstPart.concat(secondPart);\n\n    this.setState({ selectedGoods: [...result] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    let text = '';\n\n    if (selectedGoods.length === 0) {\n      text = 'No goods selected';\n    } else if (selectedGoods.length === 1) {\n      text = `${selectedGoods} is selected`;\n    } else if (selectedGoods.length > 1) {\n      text = `${selectedGoods.join(' ,')} are selected`;\n    }\n\n    return (\n      <div className=\"goodsBloc\">\n        <div className=\"goodsBloc-heading\">\n          <h1 className=\"goodsBloc-heading-title\">\n            {text}\n          </h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n            className={classNames('goodsBloc-heading-btn', { 'goodsBloc-heading-btn--emptyState': selectedGoods.length === 0 })}\n          >\n            X\n          </button>\n        </div>\n        <ul className=\"goodsList\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames('list-item', { 'list-item--selected': selectedGoods.includes(good) })}\n            >\n              {good}\n              <span>\n                <button\n                  type=\"button\"\n                  className={classNames('btn', { 'btn--selected': selectedGoods.includes(good) })}\n                  onClick={() => {\n                    this.addClick(good);\n                  }}\n                >\n                  Add\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  onClick={() => {\n                    this.removeClick(good);\n                  }}\n                >\n                  Remove\n                </button>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}